<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="board.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA4oAAAELCAYAAACf/nisAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAACBhJREFUeF7t3T9rllccx+EsodCE2m5ZikUHs/V1VKS1W3HSTaitLjpnNJOlc19I
        XkF1FEJpB0HBJSCWtGDJYGl/J57i8737VKrG/HnO9YML9Jxzn/teP0uepYOYH3/45my5VL4v98pfAAAA
        HIq75U5pTXamZ9rRTH3Ae+VK2S7zPhYAAIDD1xrtclnu+fbup162Uq6Xx2XeRwEAAHD0WrN9W1Z6zh38
        1OWr5VZ5UuZ9BAAAAMdPa7ibZbXn3cFMXfhpeVTmvRQAAIDj72FZ75n3dlMXXSh/9IsBAAA4uX4rX/Tc
        e7OpC66V5/1CAAAATr7WeDd69r3etAdnLgIAAGCxvF4s1gOflz9nLgAAAGCxtOb7smfgq6cOrpdn/UEA
        AAAW12559R+4qQOnys/9AQAAABZfa8BTPQv/PbW5MXMYAACAMWz0LMypjXNlb+YgAAAAY2gt+HHPw5dT
        i9/NHAIAAGAst3sevpha+Kj4UX0AAIBxPS3v90zcD8WrM5sAAACM6WrPxP1QvD/ZBAAAYDz3/4nEtckG
        AAAA41proXhxsggAAMC4LrZQ3JwsAgAAMK7NFopbk0UAAADGtdVC8cFkEQAAgHE9aKG4M1kEAABgXDst
        FPcmiwAAAIxrr4XivA0AAAAGJRQBAAAIQhEAAIAgFAEAAAhCEQAAgCAUAQAACEIRAACAIBQBAAAIQhEA
        AIAgFAEAAAhCEQAAgCAUAQAACEIRAACAIBQBAAAIQhEAAIAgFAEAAAhCEQAAgCAUAQAACEIRAACAIBQB
        AAAIQhEAAIAgFAEAAAhCEQAAgCAUAQAACEIRAACAIBQBAAAIQhEAAIAgFAEAAAhCEQAAgCAUAQAACEIR
        AACAIBQBAAAIQhEAAIAgFAEAAAhCEQAAgCAUAQAACEIRAACAIBQBAAAIQhEAAIAgFAEAAAhCEQAAgCAU
        AQAACEIRAACAIBQBAAAIQhEAAIAgFAEAAAhCEQAAgCAUAQAACEIRAACAIBQBAAAIQhEAAIAgFAEAAAhC
        EQAAgCAUAQAACEIRAACAIBQBAAAIQhEAAIAgFAEAAAhCEQAAgCAUAQAACEIRAACAIBQBAAAIQhEAAIAg
        FAEAAAhCEQAAgCAUAQAACEIRAACAIBQBAAAIQhEAAIAgFAEAAAhCEQAAgCAUAQAACEIRAACAIBQBAAAI
        QhEAAIAgFAEAAAhCEQAAgCAUAQAACEIRAACAIBQBAAAIQhEAAIAgFAEAAAhCEQAAgCAUAQAACEIRAACA
        IBQBAAAIQhEAAIAgFAEAAAhCEQAAgCAUAQAACEIRAACAIBQBAAAIQhEAAIAgFAEAAAhCEQAAgCAUAQAA
        CEIRAACAIBQBAAAIQhEAAIAgFAEAAAhCEQAAgCAUAQAACEIRAACAIBQBAAAIQhEAAIAgFAEAAAhCEQAA
        gCAUAQAACEIRAACAIBQBAAAIQhEAAIAgFAEAAAhCEQAAgCAUAQAACEIRAACAIBQBAAAIQhEAAIAgFAEA
        AAhCEQAAgCAUAQAACEIRAACAIBQBAAAIQhEAAIAgFAEAAAhCEQAAgCAUAQAACEIRAACAIBQBAAAIQhEA
        AIAgFAEAAAhCEQAAgCAUAQAACEIRAACAIBQBAAAIQhEAAIAgFAEAAAhCEQAAgCAUAQAACEIRAACAIBQB
        AAAIQhEAAIAgFAEAAAhCEQAAgCAUAQAACEIRAACAIBQBAAAIQhEAAIAgFAEAAAhCEQAAgCAUAQAACEIR
        AACAIBQBAAAIQhEAAIAgFAEAAAhCEQAAgCAUAQAACEIRAACAIBQBAAAIQhEAAIAgFAEAAAhCEQAAgCAU
        AQAACEIRAACAIBQBAAAIQhEAAIAgFAEAAAhCEQAAgCAUAQAACEIRAACAIBQBAAAIQhEAAIAgFAEAAAhC
        EQAAgCAUAQAACEIRAACAIBQBAAAIQhEAAIAgFAEAAAhCEQAAgCAUAQAACEIRAACAIBQBAAAIQhEAAIAg
        FAEAAAhCEQAAgCAUAQAACEIRAACAIBQBAAAIQhEAAIAgFAEAAAhCEQAAgCAUAQAACEIRAACAIBQBAAAI
        QhEAAIAgFAEAAAhCEQAAgCAUAQAACEIRAACAIBQBAAAIQhEAAIAgFAEAAAhCEQAAgCAUAQAACEIRAACA
        IBQBAAAIQhEAAIAgFAEAAAhCEQAAgCAUAQAACEIRAACAIBQBAAAIQhEAAIAgFAEAAAhCEQAAgCAUAQAA
        CEIRAACAIBQBAAAIQhEAAIDQQnFvuggAAMCw9loo7k4WAQAAGNdOC8VHk0UAAADG9aCF4tZkEQAAgHFt
        tVDcnCwCAAAwrs0Wil9NFgEAABjXxRaKn0wWAQAAGNfaUpv6x/ZkAwAAgPFs70dim/rPjckmAAAA47na
        M3E/FD8sT2c2AQAAGMuv5YOeiS+mFm7PHAAAAGAst3sevpxaPD05BAAAwDhO9zzMqY2NyUEAAAAW30bP
        wvlTB36ZPAAAAMDi+qnn4H9PHVovz2YeAgAAYDHtlvWeg6+eOnhh5kEAAAAW02c9A//f1AN+WxEAAGBx
        fd3z7/WmHmyx+HzmIgAAAE621njXeva92dQF58vv/UIAAABOrtZ253vuvd3URe0P3DzsFwMAAHDytF+4
        ONcz72CmLlwtN8uTMu+lAAAAHD+t4W6V1Z53Bz91+Up/yU6Z9xEAAAAcvcflelnpOffup162XC6X7TLv
        owAAADh8rdGulOWeb0cz9QFnyqVyp9wt8z4WAACAg3evtBZrTXa2Z9pbzNLS3wud7afZGeVcAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>